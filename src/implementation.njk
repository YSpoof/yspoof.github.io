---
title: Implementation
layout: layouts/base.njk
---
<div class="flex justify-between">
  <div class="">
    <h2 class="text-center text-2xl text-stone-100 py-4">Advantages:</h2>
    <ul class="list-disc">
      <li><a class="underline cursor-pointer" href="/implementation/#easy-implementation">Easy implementation</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#no-ss-config">No server-side config</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#not-on-all-browsers">Automatic history pushes</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#smooth-transitions">Smooth transitions</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#seo-friendly">SEO friendly</a></li>
    </ul>
  </div>
  
  <div class="">
    <h2 class="text-center text-2xl text-stone-100 py-4">Disadvantages:</h2>
    <ul class="list-disc">
      <li><a class="underline cursor-pointer" href="/implementation/#probably-a-bit-heavy">Probably a bit heavy</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#scripts-need-to-be-different">Scripts need to be crafted diferently</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#not-on-all-browsers">Currently doesn't work on all browsers</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#probably-a-bit-heavy">The hole part of a page gets updated</a></li>
      <li><a class="underline cursor-pointer" href="/implementation/#probably-a-bit-heavy">Every navigation makes a full page request</a></li>
    </ul>
  </div>
</div>

<h2 class="font-bold text-2xl py-4 mt-4">Why bother creating that?</h2>

<p class="py-6" id="no-ss-config">So, the whole idea came when I was thinking about SPAs and how cool they are, but I saw that you need some special thing in the server, like, you need to always send a default index.html wich contains the script to handle the routes and stuff (I'm talking about doing it vanilla, but AFAIK the frameworks like React / VUE / ETC do that in background when you spin-up a server with those...).</p>

<p class="py-6">Besides that, you also need to define any route manually and have complex strutctures that's harder at least for me as <a href="/whoami">not being a developer</a>.</p>

<p class="py-6" id="seo-friendly">Other types of routers can also break SEO, since when the bot tries a direct path like 'domain/a-sample-page' it get's redirect to the home, then a script tries to find the route and re-draw the page.</p>

<p class="py-6" id="not-on-all-browsers">So, my approach is way simpler and uses a native API called 'NavigationAPI', it handles lots of stuff like pushing history states, with that API, you don't need to define any route, the magic happens automatic.</p>

<p class="py-6" id="easy-implementation">Just import the router script as a module, edit it to fit your needs and that's it, also, that's just a POC, so I better not recommend it for production unless you <span class="line-through">are dumb like me and</span> like experimenting.</p>

<p class="py-6">About SEO, it does't break, since the multiple pages (MPA) still exists and are full normal pages directly accessible, the router only takes control after the page has loaded.</p>

<p class="py-6" id="probably-a-bit-heavy">Because of that, the entire page needs to still be downloaded, and the main part extracted and added to the current DOM for it to render.</p>

<p class="py-6" id="smooth-transitions"> This makes it easy to use the View Transitions API, another experimental one, but I saw that MPAs are going to get this too in the near future.</p>

<p class="py-6" id="scripts-need-to-be-different">Also, the scripts need to be made a bit different, since the DOM changes, you need to recall whatever is listening to it, like events, elements selectors and stuff.</p>

<p class="py-6">Fun fact: 'Gambi' in the name comes from the word 'gambiarra' that here in Brazil means something like 'improvisation' or 'workaround', a thing that should be set temporarely but we gently 'forget about it' since it 'works'.</p>

<p class="py-6">You can check the source code of the <a href="https://github.com/YSpoof/yspoof.github.io/blob/main/src/assets/js/router.js" target="_blank">router</a> and the <a href="https://github.com/YSpoof/yspoof.github.io/blob/main/src/assets/js/example.js" target="_blank">example script</a>.</p>